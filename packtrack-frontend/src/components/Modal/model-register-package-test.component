import React, { useEffect, useState } from "react";
import { Dialog } from "primereact/dialog";
import _ from "lodash";
import FormRegisterPackage from "../form/form-regis-package.component";
import { GrAddCircle } from "react-icons/gr";
import axiosApiInstance from "../../utils/axios";
import useTransporter from "../../hooks/useTransporter";
import { IoMdClose } from "react-icons/io";

import { useFieldArray, useForm } from "react-hook-form";
import { yupResolver } from "@hookform/resolvers/yup";
import * as yup from "yup";

interface RegisterPackageProps {
  registerVisible: boolean;
  registerOnClose: () => void;
  setStateLoading: React.Dispatch<React.SetStateAction<boolean>>;
}

interface RegisPackage {
    trackingNumber: string;
    transporterDigit: string;
}

const regisPackageSchema = yup
  .object()
  .shape({
    packages: yup.array().of(
      yup.object().shape({
        trackingNumber: yup.string().required("Tracking Number is required"),
        transporterDigit: yup.string().required("Tracking Number is required"),
      })
    ),
  })
  .required();

const ModalRegisterPackage: React.FC<RegisterPackageProps> = ({
  registerVisible,
  registerOnClose,
  setStateLoading,
}) => {
  const { transporters } = useTransporter();
  const formOptions = { resolver: yupResolver(regisPackageSchema) };
  const { register, control, handleSubmit, reset, formState, watch } =
    useForm<RegisPackage>(formOptions);
  const { errors } = formState;
  const { fields, append, remove } = useFieldArray<RegisPackage>({
    name: packages,
    control,
  });

  const headerText = (
    <span className="flex justify-center font-[kanit] text-[#5ECEFF] text-2xl">
      ลงทะเบียนพัสดุ
    </span>
  );

  const onSubmit = async (data: RegisPackage) => {
    console.log(data);
    setStateLoading(true);
    try {
      let res = await axiosApiInstance.post("/api/package/assign", {
        data,
      });
      if (res.status === 201) {
        setStateLoading(false);
        registerOnClose();
      }
    } catch (err) {
      console.log(err);
    }
  };

  return (
    <Dialog
      header={headerText}
      visible={registerVisible}
      draggable={false}
      className="w-1/2"
      onHide={registerOnClose}
    >
      <form onSubmit={handleSubmit(onSubmit)}>
        {fields.map((field, index) => {
          return (
            <div
              key={field.id}
              className="flex flex-col justify-evenly rounded shadow p-10 border-l-8 border-l-[#D24337]"
            >
              <button
                type="button"
                onClick={() => remove(index)}
                className="flex justify-end mb-2"
              >
                <IoMdClose />
              </button>
              <div className="flex flex-row justify-evenly items-center font-[kanit]">
                <label className="w-1/2">เลขติดตามพัสดุ (Track & Trace)</label>
                <input
                  type="text"
                  className="rounded border-2 text-sm p-2 w-1/2 text-center"
                  placeholder="กรุณากรอกเลขติดตามพัสดุของท่าน"
                  {...register(`packages.${index}.trackingNumber`)}
                />
              </div>
              <div className="flex flex-row justify-evenly items-center font-[kanit] mt-1">
                <label className="w-1/2">ผู้ให้บริการขนส่ง</label>
                <select
                  {...register(`packages.${index}.transporterDigit`)}
                  className="rounded border-2 text-sm p-2 w-1/2 text-center"
                >
                  <option value="" className="hidden">
                    กรุณาเลือกผู้ให้บริการขนส่งของท่าน
                  </option>
                  {transporters.map((item) => (
                    <option key={item.digit} value={item.digit}>
                      {item.name}
                    </option>
                  ))}
                </select>
              </div>
            </div>
          );
        })}
        <button
          type="button"
          onClick={() => {
            append({ trackingNumber: "", transporterDigit: "" });
          }}
          className="flex w-full justify-center mt-4"
        >
          <GrAddCircle className="text-3xl text-main" />
        </button>

        <div className="flex flex-row justify-center mt-5">
          <input
            type="submit"
            value="ยืนยัน"
            className="bg-[#005DFF] rounded font-[kanit] text-white px-10 py-1"
          />
        </div>
      </form>
    </Dialog>
  );
};

export default ModalRegisterPackage;
